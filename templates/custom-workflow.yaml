---
# Template: Custom Atmos Workflow
# This template follows the best practices outlined in GUIDELINES.md
# Replace placeholder values and comments with your actual implementation

# Workflow configuration
name: custom-workflow-name  # Replace with your workflow name
description: "Description of your custom workflow"  # Replace with your workflow description

# Required command line arguments
args:
  - name: tenant
    description: "Tenant name (e.g., mycompany)"
    required: true
  - name: account
    description: "Account name (e.g., dev, staging, prod)"
    required: true
  - name: environment
    description: "Environment name (e.g., ue1, uw2)"
    required: true
  # Add more required arguments as needed
  - name: custom_arg
    description: "Custom argument description"
    required: false
    default: "default-value"

# Workflow steps
steps:
  # Validation step
  - name: validation
    description: "Validate configuration"
    command: atmos
    args:
      - terraform
      - validate
      - component1
      - -s
      - "{tenant}-{account}-{environment}"

  # Planning step
  - name: plan
    description: "Plan deployment changes"
    command: atmos
    args:
      - terraform
      - plan
      - component1
      - -s
      - "{tenant}-{account}-{environment}"

  # Confirmation step
  - name: confirm
    description: "Confirm deployment"
    command: echo
    args:
      - "Do you want to continue with the deployment? (Press Ctrl+C to cancel)"
    interactive: true

  # Apply step
  - name: apply
    description: "Apply changes"
    command: atmos
    args:
      - terraform
      - apply
      - component1
      - -s
      - "{tenant}-{account}-{environment}"
      - --auto-approve

  # Additional component steps
  - name: deploy_component2
    description: "Deploy component2"
    command: atmos
    args:
      - terraform
      - apply
      - component2
      - -s
      - "{tenant}-{account}-{environment}"
      - --auto-approve

  # Verification step
  - name: verify
    description: "Verify deployment"
    command: atmos
    args:
      - terraform
      - output
      - component1
      - -s
      - "{tenant}-{account}-{environment}"

  # Success message
  - name: success
    description: "Deployment completed successfully"
    command: echo
    args:
      - "âœ“ Custom workflow completed successfully!"