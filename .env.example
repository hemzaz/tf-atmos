# Environment Configuration Template for tf-atmos
# Copy this file to .env and customize with your values

# ==============================================
# AWS Configuration
# ==============================================

# Your AWS Account ID (required)
AWS_ACCOUNT_ID=123456789012

# AWS Region for resources (required)
AWS_REGION=us-west-2
AWS_DEFAULT_REGION=us-west-2

# Management Account ID (optional, for cross-account access)
AWS_MANAGEMENT_ACCOUNT_ID=999999999999

# AWS Credentials (optional if using AWS CLI profiles)
# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key

# AWS CLI Profile (optional)
# AWS_PROFILE=default

# ==============================================
# Project Configuration
# ==============================================

# Project identifier
PROJECT_NAME=tf-atmos

# Default tenant/organization
TENANT=fnx

# Default environment
ENVIRONMENT=dev

# Default account
ACCOUNT=dev

# Atmos CLI version (used for validation)
ATMOS_CLI_VERSION=1.163.0

# ==============================================
# Terraform Configuration
# ==============================================

# Terraform version (must match atmos.yaml)
TERRAFORM_VERSION=1.11.0

# Terraform backend configuration
TF_BACKEND_BUCKET_PREFIX=atmos-terraform-state
TF_DYNAMODB_TABLE=atmos-terraform-state-lock

# ==============================================
# Development Environment (Optional)
# ==============================================

# Docker Compose project name
COMPOSE_PROJECT_NAME=tf-atmos-dev

# Enable Docker BuildKit
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# ==============================================
# Gaia CLI Configuration (Optional)
# ==============================================

# Default stack for operations
DEFAULT_STACK=fnx-dev-testenv-01

# Enable verbose output
GAIA_VERBOSE=false

# Enable debug mode
GAIA_DEBUG=false

# ==============================================
# GitHub Integration (Optional)
# ==============================================

# GitHub token for private repositories
# GITHUB_TOKEN=ghp_your_token_here

# GitHub organization
# GITHUB_ORG=your-org

# ==============================================
# Monitoring & Observability (Optional)
# ==============================================

# Enable monitoring stack
ENABLE_MONITORING=true

# Grafana admin credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin_dev

# ==============================================
# Platform API Configuration (Optional)
# ==============================================

# Platform API URL (for local development)
PLATFORM_API_URL=http://localhost:8000

# Default tenant for platform operations
PLATFORM_DEFAULT_TENANT=dev

# Default account for platform operations  
PLATFORM_DEFAULT_ACCOUNT=local

# ==============================================
# Atlantis Configuration (Optional)
# ==============================================

# Atlantis webhook secret
ATLANTIS_WEBHOOK_SECRET=dev-webhook-secret

# GitHub user for Atlantis
ATLANTIS_GH_USER=atlantis

# Repository allowlist for Atlantis
ATLANTIS_REPO_ALLOWLIST=github.com/your-org/*

# ==============================================
# Database Configuration (Optional)
# ==============================================

# PostgreSQL configuration for local development
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres_dev
POSTGRES_DB=atmos_dev

# Multiple databases for development
POSTGRES_MULTIPLE_DATABASES=backstage,platform,monitoring

# ==============================================
# Security Configuration (Optional)
# ==============================================

# Enable security scanning
ENABLE_SECURITY_SCANNING=true

# Secret encryption key (generate with: openssl rand -base64 32)
# SECRET_KEY=your-secret-key-here

# ==============================================
# Feature Flags (Optional)  
# ==============================================

# Enable Kubernetes integration
ENABLE_K8S_LOCAL=true

# Enable cost optimization features
ENABLE_COST_OPTIMIZATION=true

# Enable drift detection
ENABLE_DRIFT_DETECTION=true

# Enable compliance checking
ENABLE_COMPLIANCE_CHECKS=true

# ==============================================
# Logging Configuration (Optional)
# ==============================================

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Log to file
LOG_TO_FILE=false

# Log file path
# LOG_FILE_PATH=/var/log/atmos.log

# ==============================================
# Performance Configuration (Optional)
# ==============================================

# Maximum concurrent operations
MAX_CONCURRENT_OPERATIONS=5

# Operation timeout (seconds)
OPERATION_TIMEOUT=1800

# Cache TTL (seconds)
CACHE_TTL=3600

# ==============================================
# Backup Configuration (Optional)
# ==============================================

# Enable state backup
ENABLE_STATE_BACKUP=true

# Backup S3 bucket
# BACKUP_S3_BUCKET=your-backup-bucket

# Backup retention days
BACKUP_RETENTION_DAYS=30

# ==============================================
# Example Configuration Values
# ==============================================

# Example for fnx organization development environment:
# AWS_ACCOUNT_ID=111111111111
# AWS_REGION=us-west-2
# TENANT=fnx
# ENVIRONMENT=dev
# ACCOUNT=dev
# DEFAULT_STACK=fnx-dev-testenv-01

# Example for production environment:
# AWS_ACCOUNT_ID=222222222222
# AWS_REGION=us-west-2
# TENANT=fnx
# ENVIRONMENT=prod
# ACCOUNT=prod
# DEFAULT_STACK=fnx-prod-uw2