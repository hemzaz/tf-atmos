---
import:
  - orgs/fnx/dev/eu-west-2/testenv-01/components/globals
  - catalog/iam/defaults
  - catalog/backend/defaults
  - catalog/secretsmanager/defaults
  - catalog/acm/defaults

components:
  terraform:
    # IAM role instances
    iam/dev:
      metadata:
        component: iam
      vars:
        # AWS account and role settings
        management_account_id: "${management_account_id}"
        account_id: "234567890123"
        target_account_id: "234567890123"

        # Cross-account access
        cross_account_role_name: "testenv-01-dev-fnx-CrossAccountRole"
        policy_name: "testenv-01-dev-fnx-CrossAccountPolicy"
        trusted_account_ids:
          - "${management_account_id}"

    iam/ci:
      metadata:
        component: iam
      vars:
        # CI/CD specific IAM roles
        create_ci_role: true
        ci_role_name: "testenv-01-ci-role"
        ci_permissions:
          - "ec2:Describe*"
          - "eks:Describe*"
          - "eks:List*"

    # Backend instances
    backend/main:
      metadata:
        component: backend
      vars:
        bucket_name: "fnx-terraform-state"
        dynamodb_table_name: "fnx-terraform-locks"
        iam_role_name: "fnx-terraform-backend-role"
        iam_role_arn: "arn:aws:iam::${management_account_id}:role/fnx-terraform-backend-role"
        state_file_key: "${environment}/${component}/terraform.tfstate"
        workspace: "default"

    # ACM certificate instances
    acm/main:
      metadata:
        component: acm
      vars:
        zone_id: "${hosted_zone_id}"
        dns_domains:
          main_wildcard:
            domain_name: "*.${domain_name}"
            subject_alternative_names:
              - "${domain_name}"
            validation_method: "DNS"
            wait_for_validation: true

    acm/services:
      metadata:
        component: acm
      vars:
        zone_id: "${hosted_zone_id}"
        dns_domains:
          services_wildcard:
            domain_name: "*.services.${domain_name}"
            validation_method: "DNS"
            wait_for_validation: true

    # Secrets Manager instances
    secretsmanager/app:
      metadata:
        component: secretsmanager
      vars:
        create_kms_key: true
        name_prefix: "app"
        secrets:
          app_credentials:
            name: "credentials"
            description: "Application credentials"
            path: "app"
            generate_random_password: true
          app_keys:
            name: "api-keys"
            description: "API integration keys"
            path: "app/api"
            generate_random_password: true

    secretsmanager/infra:
      metadata:
        component: secretsmanager
      vars:
        create_kms_key: true
        name_prefix: "infra"
        secrets:
          istio_certificates:
            name: "istio-certificates"
            description: "TLS certificates for Istio Gateway"
            path: "certificates"
            secret_data: |
              {
                "tls.crt": "${ssm:/fnx/certificates/example.com-wildcard/cert}",
                "reference_only": "true"
              }