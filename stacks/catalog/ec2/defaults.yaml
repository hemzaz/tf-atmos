name: ec2
description: "EC2 instance management"

components:
  terraform:
    ec2:
      metadata:
        component: ec2
        type: abstract
        version: "1.0.0"
        description: "Manages EC2 instances and SSH keys"
        category: "compute"
      depends_on:
        - vpc
        - securitygroup
      vars:
        tenant: "${tenant}"
        enabled: true
        region: "${region}"
        vpc_id: "${output.vpc.vpc_id}"
        subnet_ids: "${output.vpc.private_subnet_ids}"
        
        # SSH key configuration
        create_ssh_keys: "${create_ssh_keys | default(true)}"
        store_ssh_keys_in_secrets_manager: "${store_ssh_keys | default(true)}"
        ssh_key_algorithm: "${ssh_key_algorithm | default('RSA')}"
        ssh_key_rsa_bits: "${ssh_key_rsa_bits | default(4096)}"
        
        # Global SSH key for environment-wide use
        global_key_name: "${global_key_name | default('${tenant}-${environment}-ssh-key')}"
        
        # Instances configuration
        instances: "${ec2_instances | default('{}')}"
        
      # Define common tags
      tags:
        Tenant: "${tenant}"
        Account: "${account}"
        Environment: "${environment}"
        Component: "EC2"
        ManagedBy: "Terraform"
        
      # Terraform backend configuration
      settings:
        terraform:
          backend:
            s3:
              bucket: "${tenant}-terraform-state"
              key: "${account}/${environment}/services/ec2/terraform.tfstate"
              region: "${region}"
              role_arn: "arn:aws:iam::${management_account_id}:role/${tenant}-terraform-backend-role"
              dynamodb_table: "${tenant}-terraform-locks"
              
      # Provider configuration
      providers:
        aws:
          region: "${region}"
          
      # Define outputs with improved descriptions
      outputs:
        instance_ids:
          description: "Map of instance names to their IDs"
          value: "${output.instance_ids}"
        instance_private_ips:
          description: "Map of instance names to their private IP addresses"
          value: "${output.instance_private_ips}"
        instance_public_ips:
          description: "Map of instance names to their public IP addresses (if applicable)"
          value: "${output.instance_public_ips}"
        ssh_key_ids:
          description: "Map of SSH key names to their IDs"
          value: "${output.ssh_key_ids}"
        security_group_ids:
          description: "Map of security group names to their IDs"
          value: "${output.security_group_ids}"

vars:
  tenant: "${tenant}"
  account: "${account}"
  environment: "${environment}"
