---
app:
  title: Platform Developer Portal
  baseUrl: http://localhost:3000
  support:
    url: https://github.com/your-org/platform-support/issues
    items:
      - title: Issues
        icon: github
        links:
          - url: https://github.com/your-org/platform-support/issues
            title: GitHub Issues
      - title: Discord
        icon: chat
        links:
          - url: https://discord.gg/platform-support
            title: '#platform-support'
      - title: Documentation
        icon: docs
        links:
          - url: https://docs.platform.company.com
            title: Platform Docs

organization:
  name: Platform Engineering

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/integrations/github/locations#configuration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    # GitHub OAuth for production authentication
    github:
      development:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}
        signIn:
          resolvers:
            - resolver: emailMatchingUserEntityAnnotation

    # Guest authentication for development
    guest:
      # Allow guest access in development
      dangerouslyAllowSignInWithoutUserInCatalog: true

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template, Domain, Group, User]
  locations:
    # Platform catalog discovery
    - type: file
      target: ../../catalog/all.yaml
      rules:
        - allow: [Component, System, API, Resource, Location, Template, Domain, Group, User]

    # Platform software templates
    - type: file
      target: ../../catalog/templates/terraform-component/template.yaml
      rules:
        - allow: [Template]

    - type: file
      target: ../../catalog/templates/environment-onboarding/template.yaml
      rules:
        - allow: [Template]

    # Infrastructure components auto-discovery
    - type: file
      target: ../../../components/terraform/*/catalog-info.yaml
      rules:
        - allow: [Component, API]

    # Legacy examples (can be removed in production)
    - type: file
      target: ../../examples/entities.yaml
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

kubernetes:
  # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  enabled: true

# Platform-specific configuration
platform:
  # Atmos integration
  atmos:
    baseUrl: http://localhost:7007/api/platform/atmos
    defaultTimeout: 300000  # 5 minutes

  # Cost tracking integration
  cost:
    baseUrl: http://localhost:7007/api/platform/cost
    refreshInterval: 300000  # 5 minutes

  # Compliance integration
  compliance:
    baseUrl: http://localhost:7007/api/platform/compliance
    refreshInterval: 600000  # 10 minutes

# Proxy configuration for platform APIs
proxy:
  endpoints:
    # Atmos API proxy
    '/api/platform/atmos':
      target: 'http://localhost:7007/api/platform/atmos'
      changeOrigin: true
      headers:
        Authorization: 'Bearer ${PLATFORM_API_TOKEN}'

    # AWS Cost Explorer proxy (if using direct AWS integration)
    '/api/aws/cost':
      target: 'https://ce.us-west-2.amazonaws.com'
      changeOrigin: true
      headers:
        Authorization: 'AWS4-HMAC-SHA256 ${AWS_SIGNATURE}'

    # GitHub API proxy for enhanced integrations
    '/api/github':
      target: 'https://api.github.com'
      changeOrigin: true
      headers:
        Authorization: 'Bearer ${GITHUB_TOKEN}'
