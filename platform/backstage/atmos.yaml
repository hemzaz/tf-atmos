---
# Atmos Configuration for Backstage Integration
# This configuration file tells Atmos how to operate within the Backstage environment

# CLI configuration
version: 1

# Base paths configuration
base_path: "/app"

components:
  terraform:
    base_path: "infrastructure/components/terraform"
    apply_auto_approve: false
    deploy_run_init: true
    init_run_reconfigure: true
    auto_generate_backend_file: true

stacks:
  base_path: "infrastructure/stacks"
  included_paths:
    - "orgs/**/*"
  excluded_paths:
    - "**/_defaults.yaml"
    - "**/globals.yaml"
  name_pattern: "{tenant}-{account}-{environment}"
  name_template: "{tenant}-{account}-{environment}"

workflows:
  base_path: "infrastructure/workflows"

# Logging configuration
logs:
  level: INFO
  file: "/app/logs/atmos.log"

# Terraform configuration
terraform:
  command: "terraform"

# Template settings
templates:
  settings:
    enabled: true
    evaluations:
      enabled: true
      context:
        enabled: true
      functions:
        enabled: true

# Schema validation
schemas:
  opa:
    timeout: 10
  jsonschema:
    timeout: 10
  atmos:
    manifest:
      timeout: 10

# Integrations configuration for Backstage
integrations:
  # GitHub integration for source control
  github:
    gitops_repo: "https://github.com/company/tf-atmos"
    gitops_branch: "main"

  # Backstage-specific settings
  backstage:
    base_url: "https://platform.company.com"
    catalog_base_url: "https://platform.company.com/catalog"

  # AWS configuration
  aws:
    profile_pattern: "{tenant}-{account}-{role}"
    role_arn_pattern: "arn:aws:iam::{account_id}:role/{tenant}-{role}"

  # Kubernetes integration
  kubernetes:
    kubeconfig_path: "/app/.kube/config"
    cluster_name_pattern: "{tenant}-{account}-{environment}"

# Settings for different environments
env:
  ATMOS_CLI_CONFIG_PATH: "/app/atmos/atmos.yaml"
  TERRAFORM_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_PLUGIN_CACHE_DIR: "/app/.terraform.d/plugin-cache"

# Helmfile configuration (if used)
helmfile:
  base_path: "infrastructure/components/helmfile"
  kubeconfig_path: "/app/.kube/config"
  helm_aws_profile_pattern: "{tenant}-{account}"
  cluster_name_pattern: "{tenant}-{account}-{environment}"

# Docker configuration for running in containers
docker:
  image:
    tag: "latest"
    repository: "platform/atmos"

# Security settings
security:
  enabled: true

# Performance settings
performance:
  cache:
    enabled: true
    ttl: 300 # 5 minutes

  concurrency:
    enabled: true
    max_workers: 4